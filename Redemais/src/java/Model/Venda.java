package Model;

import Dao.ClienteDao;
import Dao.ClienteDaoImp;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * Venda generated by hbm2java
 */
@Entity
@Table(name = "venda", catalog = "redemais_db")
public class Venda implements java.io.Serializable {

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id_venda", unique = true, nullable = false)
    private Integer idVenda;
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_cliente", nullable = false)
    private Cliente cliente;
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_empresa")
    private Empresa empresa;
    @Column(name = "valor", nullable = false, precision = 22, scale = 0)
    private double valor;
    @Temporal(TemporalType.DATE)
    @Column(name = "data_venda", nullable = false, length = 10)
    private Date dataVenda;
    @Temporal(TemporalType.TIME)
    @Column(name = "hora", nullable = false, length = 8)
    private Date hora;
    @Column(name = "status", nullable = false, length = 1)
    private char status;
    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "venda")
    private List<Cancelamento> cancelamentos = new ArrayList<Cancelamento>();
    @Transient
    private int idCliente;
    @Transient
    private double confirmaValor;
    @Transient
    private String cpfCliente;

    public Venda() {
    }

    public Venda(Cliente cliente, Empresa empresa, double valor, Date dataVenda, Date hora, char status, int idCliente, double confirmaValor, String cpfCliente) {
        this.cliente = cliente;
        this.empresa = empresa;
        this.valor = valor;
        this.dataVenda = dataVenda;
        this.hora = hora;
        this.status = status;
        this.idCliente = idCliente;
        this.confirmaValor = confirmaValor;
        this.cpfCliente = cpfCliente;
    }

    public int getIdCliente() {
        return idCliente;
    }

    public void setIdCliente(int idCliente) {
        if (idCliente != 0) {
            ClienteDao dao = new ClienteDaoImp();
            if (dao.getCliente(idCliente) != null) {
                this.cliente = dao.getCliente(idCliente);
            }
        }
        this.idCliente = idCliente;
    }

    public String getCpfCliente() {
        return cpfCliente;
    }

    public void setCpfCliente(String cpfCliente) {
        if (!cpfCliente.equals("")) {
            ClienteDao dao = new ClienteDaoImp();
            if (dao.getCliente(cpfCliente) != null) {
                this.cliente = dao.getCliente(cpfCliente);
            }
        }
        this.cpfCliente = cpfCliente;
    }

    public Integer getIdVenda() {
        return this.idVenda;
    }

    public Cliente getCliente() {
        return this.cliente;
    }

    public void setCliente(Cliente cliente) {
        this.cliente = cliente;
    }

    public Empresa getEmpresa() {
        return empresa;
    }

    public void setEmpresa(Empresa empresa) {
        this.empresa = empresa;
    }

    public double getValor() {
        return this.valor;
    }

    public void setValor(double valor) {
        this.valor = valor;
    }

    public Date getDataVenda() {
        return this.dataVenda;
    }

    public void setDataVenda(Date dataVenda) {
        this.dataVenda = dataVenda;
    }

    public Date getHora() {
        return this.hora;
    }

    public void setHora(Date hora) {
        this.hora = hora;
    }

    public char getStatus() {
        return this.status;
    }

    public void setStatus(char status) {
        this.status = status;
    }

    public List<Cancelamento> getCancelamentos() {
        return this.cancelamentos;
    }

    public void setCancelamentos(List<Cancelamento> cancelamentos) {
        this.cancelamentos = cancelamentos;
    }

    public double getConfirmaValor() {
        return confirmaValor;
    }

    public void setConfirmaValor(double confirmaValor) {
        this.confirmaValor = confirmaValor;
    }
}
